"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4258],{8099:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});var i=o(4848),s=o(8453);const t={sidebar_position:9},l="Access Lists and Role-based Access Control (RBAC)",r={id:"authorize/acl-rbac",title:"Access Lists and Role-based Access Control (RBAC)",description:"The allow and deny directives are the series of entries defining how to",source:"@site/docs/authorize/acl-rbac.md",sourceDirName:"authorize",slug:"/authorize/acl-rbac",permalink:"/docs/authorize/acl-rbac",draft:!1,unlisted:!1,editUrl:"https://github.com/authcrunch/authcrunch.github.io/edit/main/docs/authorize/acl-rbac.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Auto-Redirect URL",permalink:"/docs/authorize/auto-redirect-url"},next:{title:"Path-Based Access Lists",permalink:"/docs/authorize/path-acl"}},c={},d=[{value:"Sources of Role Information",id:"sources-of-role-information",level:2},{value:"Anonymous Role",id:"anonymous-role",level:2},{value:"Granting Access with Access Lists",id:"granting-access-with-access-lists",level:2},{value:"Comment",id:"comment",level:3},{value:"Conditions",id:"conditions",level:3},{value:"Match Conditions",id:"match-conditions",level:4},{value:"Field Exists Conditions",id:"field-exists-conditions",level:4},{value:"Match Any Condition",id:"match-any-condition",level:4},{value:"Actions",id:"actions",level:3},{value:"ACL Shortcuts",id:"acl-shortcuts",level:3},{value:"Primer",id:"primer",level:3},{value:"Default Allow ACL",id:"default-allow-acl",level:2},{value:"Forbidden Access",id:"forbidden-access",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"access-lists-and-role-based-access-control-rbac",children:"Access Lists and Role-based Access Control (RBAC)"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"allow"})," and ",(0,i.jsx)(n.code,{children:"deny"}),' directives are the series of entries defining how to\nauthorize claims. In the above example, the plugin authorizes access for the holders of "roles"\nclaim where values are any of the following: "anonymous", "guest", "admin".']}),"\n",(0,i.jsx)(n.h2,{id:"sources-of-role-information",children:"Sources of Role Information"}),"\n",(0,i.jsx)(n.p,{children:"By default, the plugin finds role information in the following token fields:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"roles"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"role"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"group"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"groups"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_metadata"})," - ",(0,i.jsx)(n.code,{children:"authorization"})," - ",(0,i.jsx)(n.code,{children:"roles"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"realm_access"})," - ",(0,i.jsx)(n.code,{children:"roles"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In the below example, the use has a single role, i.e. ",(0,i.jsx)(n.code,{children:"anonymous"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "exp": 1596031874,\n  "sub": "jsmith",\n  "name": "Smith, John",\n  "email": "jsmith@gmail.com",\n  "roles": [\n    "anonymous"\n  ],\n  "origin": "localhost"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Additionally, the token validation component of the plugin recognized that roles\nmay be in other parts of a token, e.g. ",(0,i.jsx)(n.code,{children:"app_metadata - authorization - roles"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "app_metadata": {\n    "authorization": {\n      "roles": ["admin", "editor"]\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Additionally, ",(0,i.jsx)(n.code,{children:"realm_access"})," - ",(0,i.jsx)(n.code,{children:"roles"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "realm_access": {\n    "roles": ["admin", "editor"]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"References:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://auth0.com/docs/users/concepts/overview-user-metadata",children:"Auth0 Docs - App Metadata"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.netlify.com/visitor-access/role-based-access-control/#external-providers",children:"Netlify - Role-based access control with JWT - External providers"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"anonymous-role",children:"Anonymous Role"}),"\n",(0,i.jsx)(n.p,{children:"By default, if the plugin does not find role information in JWT token, then\nautomatically treats the token having the following two roles:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"anonymous"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"guest"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"For example, it happens when:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"roles"})," and ",(0,i.jsx)(n.code,{children:"app_metadata"})," are not present in a token"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_metadata"})," does not contain ",(0,i.jsx)(n.code,{children:"authorization"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"granting-access-with-access-lists",children:"Granting Access with Access Lists"}),"\n",(0,i.jsx)(n.p,{children:"Access list rule consists of 3 sections:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comment"}),"\n",(0,i.jsx)(n.li,{children:"Conditions"}),"\n",(0,i.jsx)(n.li,{children:"Actions"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The rule has the following syntax:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"acl rule {\n  comment\n  conditions\n  action\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"acl rule {\n  comment Allow viewer and editor access, log, count, and stop processing\n  match roles viewer editor\n  allow stop counter log debug\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"comment",children:"Comment"}),"\n",(0,i.jsx)(n.p,{children:"The comment section is a string to identify a rule."}),"\n",(0,i.jsx)(n.p,{children:"The section is a single statement."}),"\n",(0,i.jsx)(n.h3,{id:"conditions",children:"Conditions"}),"\n",(0,i.jsx)(n.p,{children:"The conditions section consists of one or more statements matching the fields\nof a token."}),"\n",(0,i.jsx)(n.h4,{id:"match-conditions",children:"Match Conditions"}),"\n",(0,i.jsxs)(n.p,{children:["There are the following types of ",(0,i.jsx)(n.code,{children:"match"})," conditions:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["match the value of a particular token field, e.g. ",(0,i.jsx)(n.code,{children:"roles"})]}),"\n",(0,i.jsx)(n.li,{children:"match the HTTP method, e.g. GET, POST, etc."}),"\n",(0,i.jsxs)(n.li,{children:["match the HTTP URI path, e.g. ",(0,i.jsx)(n.code,{children:"/api"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The condition syntax follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[no] [exact|partial|prefix|suffix|regex] match <field> <value> ... <valueN>\n[no] [exact|partial|prefix|suffix|regex] match method <http_method_name>\n[no] [exact|partial|prefix|suffix|regex] match path <http_path_uri>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The following conditions match when a token has ",(0,i.jsx)(n.code,{children:"roles"})," field with the values\nof either ",(0,i.jsx)(n.code,{children:"viewer"})," or ",(0,i.jsx)(n.code,{children:"editor"})," and has ",(0,i.jsx)(n.code,{children:"org"})," field with the value of ",(0,i.jsx)(n.code,{children:"nyc"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"match roles viewer editor\nmatch org nyc\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The following conditions match when a token has ",(0,i.jsx)(n.code,{children:"roles"})," field with the values\nof either ",(0,i.jsx)(n.code,{children:"viewer"})," or ",(0,i.jsx)(n.code,{children:"editor"})," and ",(0,i.jsx)(n.code,{children:"org"})," field begins with ",(0,i.jsx)(n.code,{children:"ny"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"match roles viewer editor\nprefix match org ny\n"})}),"\n",(0,i.jsx)(n.h4,{id:"field-exists-conditions",children:"Field Exists Conditions"}),"\n",(0,i.jsx)(n.p,{children:"The field existance in a token conditions follow this syntax."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"field <name> [not] exists\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For example the following condition checks for the presense\nof ",(0,i.jsx)(n.code,{children:"sub"})," field in a token:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"field sub exists\n"})}),"\n",(0,i.jsx)(n.h4,{id:"match-any-condition",children:"Match Any Condition"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"match"})," any condition is a shortcut for ",(0,i.jsx)(n.code,{children:"field exp exists"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"actions",children:"Actions"}),"\n",(0,i.jsx)(n.p,{children:"The actions section is a single line instructing how to deal with a token\nwhich matches the conditions."}),"\n",(0,i.jsxs)(n.p,{children:["The potential values for actions follow. Please note the first keyword\ncould be ",(0,i.jsx)(n.code,{children:"allow"})," or ",(0,i.jsx)(n.code,{children:"deny"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"allow\nallow counter\nallow counter log <error|warn|info|debug>\nallow log <error|warn|info|debug>\nallow log <error|warn|info|debug> tag <value>\nallow stop\nallow stop counter\nallow stop counter log <error|warn|info|debug>\nallow stop log <error|warn|info|debug>\nallow any\nallow any counter\nallow any counter log <error|warn|info|debug>\nallow any log <error|warn|info|debug>\nallow any stop\nallow any stop counter\nallow any stop counter log <error|warn|info|debug>\nallow any stop log <error|warn|info|debug>\n"})}),"\n",(0,i.jsx)(n.p,{children:"By default the ACL rule hits are not being logged or counted."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"log <error|warn|info|debug>"})," keyword enables the logging of rule hits.\nIf the log level is not being set, it defaults to ",(0,i.jsx)(n.code,{children:"info"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"tag"})," keyword instructs the plugin to add a tag to the log output."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"counter"})," keyword enables the counting of hits. The counters could be\nexposed with prometheus exporter."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"stop"})," keyword instructs the plugin to stop processing ACL rules after\nthe processing the one with the ",(0,i.jsx)(n.code,{children:"stop"})," keyword."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"any"})," keyword instructs the plugin to trigger actions when any of the\nconditions match. By default, all the conditions must match to trigger\nactions."]}),"\n",(0,i.jsx)(n.h3,{id:"acl-shortcuts",children:"ACL Shortcuts"}),"\n",(0,i.jsx)(n.p,{children:"Here are the patterns of one-liner allowed for use:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"allow roles viewer editor with method get /internal/dashboard\nallow roles viewer editor with method post\ndeny roles anonymous guest with method get /internal/dashboard\ndeny roles anonymous guest with method post\nallow roles anonymous guest\nallow audience https://localhost/ https://example.com/\n"})}),"\n",(0,i.jsx)(n.h3,{id:"primer",children:"Primer"}),"\n",(0,i.jsxs)(n.p,{children:["Please review configuration files\nin ",(0,i.jsx)(n.a,{href:"https://github.com/greenpau/caddy-auth-docs/blob/main/assets/conf/",children:"conf"})," directory."]}),"\n",(0,i.jsx)(n.h2,{id:"default-allow-acl",children:"Default Allow ACL"}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"authorize"}),' configuration contains the following directive, then the "catch-all"\naction is ',(0,i.jsx)(n.code,{children:"allow"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"{\n  security {\n    authorization policy mypolicy {\n      acl default allow\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"forbidden-access",children:"Forbidden Access"}),"\n",(0,i.jsxs)(n.p,{children:["By default, ",(0,i.jsx)(n.code,{children:"caddyauth.Authenticator"})," plugins should not set header or payload of the\nresponse. However, caddy, by default, responds with 401 (instead of 403),\nbecause ",(0,i.jsx)(n.code,{children:"caddyauth.Authenticator"})," does not distinguish between authorization (403)\nand authentication (401)."]}),"\n",(0,i.jsxs)(n.p,{children:["The plugin's default behaviour is responding with ",(0,i.jsx)(n.code,{children:"403 Forbidden"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["However, one could use the ",(0,i.jsx)(n.code,{children:"set forbidden url"})," Caddyfile directive to redirect\nusers to a custom 403 page."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"{\n  security {\n    authorization policy mypolicy {\n      set forbidden url /custom_403.html\n    }\n  }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var i=o(6540);const s={},t=i.createContext(s);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);