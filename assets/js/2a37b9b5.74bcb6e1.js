"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1082],{8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var n=s(6540);const r={},o=n.createContext(r);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:t},e.children)}},9812:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"authenticate/local/static-users","title":"Static Users","description":"The following configuration allows to create local users as parts","source":"@site/docs/authenticate/local/50-static-users.md","sourceDirName":"authenticate/local","slug":"/authenticate/local/static-users","permalink":"/docs/authenticate/local/static-users","draft":false,"unlisted":false,"editUrl":"https://github.com/authcrunch/authcrunch.github.io/edit/main/docs/authenticate/local/50-static-users.md","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"User Registration","permalink":"/docs/authenticate/local/user-registration"},"next":{"title":"LDAP Configuration","permalink":"/docs/authenticate/ldap/ldap"}}');var r=s(4848),o=s(8453);const a={},i="Static Users",c={},l=[{value:"Bcrypt Password Generation",id:"bcrypt-password-generation",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"static-users",children:"Static Users"})}),"\n",(0,r.jsx)(t.p,{children:"The following configuration allows to create local users as parts\nof the definition for local identity store."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'local identity store localdb {\n    realm local\n    path {$HOME}/.local/caddy/localdb/users.json\n    user webadmin {\n        name Webmaster\n        email webadmin@localhost.localdomain\n        password "bcrypt:10:$2a$10$WiU7BR1vqCNnzP5rZltJ5Ow5RspiIgnenCCFGSeMPrFFUhHRpkIhe" overwrite\n        roles authp/admin authp/user\n    }\n    user jsmith {\n        name John Smith\n        email jsmith@localhost.localdomain\n        password "My@Password123"\n        roles authp/user\n    }\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"overwrite"})," directive instructs the plugin to overwrite the password\ncurrently configured in the identity store."]}),"\n",(0,r.jsx)(t.h2,{id:"bcrypt-password-generation",children:"Bcrypt Password Generation"}),"\n",(0,r.jsxs)(t.p,{children:["First, download ",(0,r.jsx)(t.code,{children:"bcrypt-tool"})," from ",(0,r.jsx)(t.a,{href:"https://github.com/shoenig/bcrypt-tool/releases",children:"https://github.com/shoenig/bcrypt-tool/releases"})]}),"\n",(0,r.jsx)(t.p,{children:"Extract it to the directory of your choice. Usage is:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"./bcrypt-tool hash SomeFunkyPassword 10\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Update a user's password in ",(0,r.jsx)(t.code,{children:"Caddyfile"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'password "bcrypt:10:<new password here>" overwrite\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);