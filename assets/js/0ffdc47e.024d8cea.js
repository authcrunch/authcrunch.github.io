"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1406],{3756:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"authenticate/auth-cookie","title":"Authorization Cookie","description":"Intra-Domain Cookies","source":"@site/docs/authenticate/auth-cookie.md","sourceDirName":"authenticate","slug":"/authenticate/auth-cookie","permalink":"/docs/authenticate/auth-cookie","draft":false,"unlisted":false,"editUrl":"https://github.com/authcrunch/authcrunch.github.io/edit/main/docs/authenticate/auth-cookie.md","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40},"sidebar":"tutorialSidebar","previous":{"title":"MFA","permalink":"/docs/authenticate/mfa"},"next":{"title":"User Transforms","permalink":"/docs/authenticate/user-transforms"}}');var o=i(4848),s=i(8453);const r={sidebar_position:40},c="Authorization Cookie",d={},a=[{value:"Intra-Domain Cookies",id:"intra-domain-cookies",level:2},{value:"JWT Tokens",id:"jwt-tokens",level:2},{value:"Auto-Generated Encryption Keys",id:"auto-generated-encryption-keys",level:3},{value:"Encryption Key Configuration",id:"encryption-key-configuration",level:3},{value:"Shared Key",id:"shared-key",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"authorization-cookie",children:"Authorization Cookie"})}),"\n",(0,o.jsx)(n.h2,{id:"intra-domain-cookies",children:"Intra-Domain Cookies"}),"\n",(0,o.jsxs)(n.p,{children:["The following ",(0,o.jsx)(n.code,{children:"Caddyfile"})," settings define the scope of the cookies issued by\nthe plugin. Specifically, what URLs the cookies should be sent to.\nSee ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies",children:"MDN - Using HTTP cookies - Define where cookies are sent"}),"\nfor more information."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cookie domain <domain>"}),": adds the ",(0,o.jsx)(n.strong,{children:"Domain"})," attribute to a cookie. It\ndetermines which hosts are allowed to receive the cookie. By default,\nthe domain is not included."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cookie path <path>"})," (optional): adds the ",(0,o.jsx)(n.strong,{children:"Path"})," attribute to a cookie.\nIt determines the URL path that must exist in the requested URL in order\nto send  the Cookie header. The default is ",(0,o.jsx)(n.code,{children:"/"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cookie lifetime"}),' (optional): sets the number of seconds until the cookie\nexpires. The directive sets "Max-Age" cookie attribute.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cookie samesite <lax|strict|none>"}),": specifies SameSite strategy."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"cookie insecure <on|off>"}),": Allows sending cookies over HTTP. By default,\nit is disabled."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"jwt-tokens",children:"JWT Tokens"}),"\n",(0,o.jsxs)(n.p,{children:["The plugin issues JWT tokens to authenticated users. The tokens\ncontains user attributes, e.g. name, email, avatar, etc. They also\ncontains roles. The roles are used to authorize user access with\n",(0,o.jsx)(n.code,{children:"authorize"})," plugin."]}),"\n",(0,o.jsx)(n.p,{children:"By default, in addition to the roles configured by an authentication provider,\nthe plugin issues one of the three roles to a user."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"authp/admin"}),": this is the admin user. It must be granted by authentication\nprovider or added to a user via ",(0,o.jsx)(n.code,{children:"transform user"})," directive"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"authp/user"}),": the user can access ",(0,o.jsx)(n.code,{children:"/settings"})," endpoint. It must be granted\nby authentication provider or added to a user via ",(0,o.jsx)(n.code,{children:"transform user"})," directive"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"authp/guest"}),": can access portal only. This is the default role assigned by\nthe portal to a user when neither ",(0,o.jsx)(n.code,{children:"authp/admin"})," nor ",(0,o.jsx)(n.code,{children:"authp/user"})," are being\nassigned"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The plugin supports the issuance and verification of RSA, ECDSA, and shared keys.\nSee docs ",(0,o.jsx)(n.a,{href:"https://github.com/greenpau/caddy-authorize#token-verification",children:"here"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"auto-generated-encryption-keys",children:"Auto-Generated Encryption Keys"}),"\n",(0,o.jsxs)(n.p,{children:["By default, if there is no ",(0,o.jsx)(n.code,{children:"crypto key"})," directive, the plugin auto-generated\nECDSA key pair for signing and verification of tokens. The key pair changes\nwith each restart of the plugin."]}),"\n",(0,o.jsxs)(n.p,{children:["In this case, there is no need to define ",(0,o.jsx)(n.code,{children:"crypto key"})," directive in ",(0,o.jsx)(n.code,{children:"authorize"})," plugin\nbecause the two plugins would know about the keypair."]}),"\n",(0,o.jsx)(n.p,{children:"This is a perfect option for standalone servers."}),"\n",(0,o.jsx)(n.h3,{id:"encryption-key-configuration",children:"Encryption Key Configuration"}),"\n",(0,o.jsx)(n.h4,{id:"shared-key",children:"Shared Key"}),"\n",(0,o.jsxs)(n.p,{children:["The following configuration instructs the plugin to sign/verify token\nwith shared key ",(0,o.jsx)(n.code,{children:"428f41ab-67ec-47d1-8633-bcade9dcc7ed"})," and add key id of\n",(0,o.jsx)(n.code,{children:"a2f19072b6d6"})," to the token's header. It uses the default token lifetime\nof 900 seconds (15 minutes). The name of the token is ",(0,o.jsx)(n.code,{children:"access_token"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"authentication portal myportal {\n  crypto key a2f19072b6d6 sign-verify 428f41ab-67ec-47d1-8633-bcade9dcc7ed\n}\n\nauthorization policy mypolicy {\n  crypto key a2f19072b6d6 verify 428f41ab-67ec-47d1-8633-bcade9dcc7ed\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The corresponding ",(0,o.jsx)(n.code,{children:"authorize"})," plugin config is:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"route {\n  authorize with mypolicy\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The following configuration instructs the plugin to sign/verify token\nwith shared key ",(0,o.jsx)(n.code,{children:"428f41ab-67ec-47d1-8633-bcade9dcc7ed"})," and add key id of\n",(0,o.jsx)(n.code,{children:"a2f19072b6d6"})," to the token's header. It uses the default token lifetime\nof 1800 seconds (30 minutes). The name of the token is ",(0,o.jsx)(n.code,{children:"JWT_TOKEN"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"authentication portal myportal {\n  crypto default token name JWT_TOKEN\n  crypto default token lifetime 1800\n  crypto key a2f19072b6d6 sign-verify 428f41ab-67ec-47d1-8633-bcade9dcc7ed\n}\n\nauthorization policy mypolicy {\n  crypto key a2f19072b6d6 verify 428f41ab-67ec-47d1-8633-bcade9dcc7ed\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The corresponding ",(0,o.jsx)(n.code,{children:"authorize"})," plugin config is:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"route {\n  authorize with mypolicy\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The following configuration instructs the plugin to sign/verify token\nwith shared key ",(0,o.jsx)(n.code,{children:"428f41ab-67ec-47d1-8633-bcade9dcc7ed"})," and add key id of\n",(0,o.jsx)(n.code,{children:"a2f19072b6d6"})," to the token's header. It uses the default token lifetime\nof 1800 seconds (30 minutes). The name of the token is ",(0,o.jsx)(n.code,{children:"JWT_TOKEN"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"authentication portal myportal {\n  crypto key sign-verify 428f41ab-67ec-47d1-8633-bcade9dcc7ed\n}\n\nauthorization policy mypolicy {\n  crypto key verify 428f41ab-67ec-47d1-8633-bcade9dcc7ed\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The corresponding ",(0,o.jsx)(n.code,{children:"authorize"})," plugin config is:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"route {\n  authorize with mypolicy\n}\n"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);