"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8182],{4479:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>h});var s=t(4848),i=t(8453);const r={},c="LDAP Authentication Architecture",o={id:"authenticate/ldap/search",title:"LDAP Authentication Architecture",description:"The plugin does not keep connections open to LDAP servers. The plugin",source:"@site/docs/authenticate/ldap/20-search.md",sourceDirName:"authenticate/ldap",slug:"/authenticate/ldap/search",permalink:"/docs/authenticate/ldap/search",draft:!1,unlisted:!1,editUrl:"https://github.com/authcrunch/authcrunch.github.io/edit/main/docs/authenticate/ldap/20-search.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LDAP Configuration",permalink:"/docs/authenticate/ldap/ldap"},next:{title:"SAML Overview",permalink:"/docs/authenticate/saml/saml"}},a={},h=[];function u(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ldap-authentication-architecture",children:"LDAP Authentication Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The plugin does not keep connections open to LDAP servers. The plugin\ntears a connection down each time it finishes authenticating a request\nassociated with the connection."}),"\n",(0,s.jsxs)(n.p,{children:["First, the plugin uses ",(0,s.jsx)(n.code,{children:"username"})," and ",(0,s.jsx)(n.code,{children:"password"})," to bind to an LDAP\nserver. The purpose of the connection is searching for user objects\nin the server's directory."]}),"\n",(0,s.jsxs)(n.p,{children:["The plugin takes the username provided in a request. Next, the\nplugin substitutes ",(0,s.jsx)(n.code,{children:"%s"})," with the username in its search filter, i.e.\n",(0,s.jsx)(n.code,{children:"(&(|(sAMAccountName=%s)(mail=%s))(objectclass=user))"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The plugin initiates a search for a user object in the scope provided\nvia ",(0,s.jsx)(n.code,{children:"search_base_dn"}),", e.g. ",(0,s.jsx)(n.code,{children:"DC=CONTOSO,DC=COM"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If the number of objects in the result of the search is not ",(0,s.jsx)(n.code,{children:"1"}),", then\nauthentication fails."]}),"\n",(0,s.jsx)(n.p,{children:"Typically, the response would have the following structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "DN": "CN=Smith\\\\, John,OU=Users,DC=CONTOSO,DC=COM",\n    "Attributes": [\n      {\n        "Name": "sn",\n        "Values": [\n          "Smith"\n        ]\n      },\n      {\n        "Name": "givenName",\n        "Values": [\n          "John"\n        ]\n      },\n      {\n        "Name": "memberOf",\n        "Values": [\n          "CN=Admins,OU=Security,OU=Groups,DC=CONTOSO,DC=COM",\n          "CN=Editors,OU=Security,OU=Groups,DC=CONTOSO,DC=COM",\n          "CN=Viewers,OU=Security,OU=Groups,DC=CONTOSO,DC=COM"\n        ]\n      },\n      {\n        "Name": "sAMAccountName",\n        "Values": [\n          "jsmith"\n        ]\n      },\n      {\n        "Name": "mail",\n        "Values": [\n          "jsmith@contoso.com"\n        ]\n      }\n    ]\n  }\n]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The plugin iterates over ",(0,s.jsx)(n.code,{children:"memberOf"})," attribute and compares the\nvalues to its group mapping:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'              "groups": [\n                {\n                  "dn": "CN=Admins,OU=Security,OU=Groups,DC=CONTOSO,DC=COM",\n                  "roles": [\n                    "admin"\n                  ]\n                },\n                {\n                  "dn": "CN=Editors,OU=Security,OU=Groups,DC=CONTOSO,DC=COM",\n                  "roles": [\n                    "editor"\n                  ]\n                },\n                {\n                  "dn": "CN=Viewers,OU=Security,OU=Groups,DC=CONTOSO,DC=COM",\n                  "roles": [\n                    "viewer"\n                  ]\n                }\n              ]\n'})}),"\n",(0,s.jsx)(n.p,{children:"If there are no matches, the authentication fails."}),"\n",(0,s.jsxs)(n.p,{children:["Once the plugin determines the user's roles, e.g. ",(0,s.jsx)(n.code,{children:"admin"}),", ",(0,s.jsx)(n.code,{children:"editor"}),", ",(0,s.jsx)(n.code,{children:"viewer"}),",\nthe plugin actually checks whether the user's password is valid."]}),"\n",(0,s.jsxs)(n.p,{children:["It does so by doing LDAP re-binding with the user's DN and the password provided\nin the request. In this example, the user's DN is\n",(0,s.jsx)(n.code,{children:"CN=Smith\\\\, John,OU=Users,DC=CONTOSO,DC=COM"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"If the re-binding is successful, the plugin issues a JWT token."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);